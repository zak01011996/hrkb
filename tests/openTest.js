/*	OPEN TEST Used convenience : 
*           {Page title } | Status , 
*           RED  => Error, 
*           Blue => URL of current operation
*           GREEN => Success/Pass
* Tests:
* 1. Login 
* 2. Opens 
*		users,
*		departments,
*		criteria,
*		candidates
* Stops if there is a mistake 	
*/

var page = require('casper').create();

phantom.injectJs("header.js");




/* 
Indicates successfull login
if finds the text : 
 > > > > > > > > > > > > > > > : Page not found 
input : status
expected : Title + successfully Login
*/

page.then(function() {
  
 this.waitForUrl('http://localhost:8080/adm/candidates', function then() {
    this.echo('Login sucessfull with \nusername : ' + username + '\npassword: ' + password, 'PARAMETER');
    },function timeout() {
        this.capture('screen_logs/loginOpenError.png');
        this.echo(this.getHTML('control-label'));
        this.die('Login unsucessfull with \nusername : ' + username + '\npassword: ' + password,'ERROR');
    });


});


/* 
Indicates successfull users list
if finds the text : 
 > > > > > > > > > > > > > > > : Add user 
input : status
expected : Title + successfully opened
*/

page.thenOpen('http://localhost:8080/adm/users/list', function(){

    
	this.echo(this.getCurrentUrl()+' opened  ', 'PARAMETER');
	this.waitForText("Add User", function then() {
        this.echo(this.getTitle() + ' | sucessfully opened user','INFO');
    }, function timeout() {
        this.capture('screen_logs/userOpenError.png');
        this.die(this.getTitle() + '| Opening  failed','ERROR');
    });
});

/* 
Indicates successfull departments list
if finds the text : 
 > > > > > > > > > > > > > > > : Add deparment 
input : status
expected : Title + successfully opened
*/
page.thenOpen('http://localhost:8080/adm/dep/list', function(){
	this.echo(this.getCurrentUrl()+' opened  ', 'PARAMETER');
	this.waitForText("Add department", function then() {
        this.echo(this.getTitle() + ' | sucessfully opened Departments','INFO');
    }, function timeout() {
        this.capture('screen_logs/departOpenError.png');
        this.die(this.getTitle() + '| Opening  failed Departments','ERROR');
    });
});

/* 
Indicates successfull criteria list
if finds the text : 
 > > > > > > > > > > > > > > > : Add criteria 
input : status
expected : Title + successfully opened
*/

page.thenOpen('http://localhost:8080/adm/crit/list', function(){
	this.echo(this.getCurrentUrl()+' opened  ', 'PARAMETER');
	this.waitForText("Add criteria", function then() {
        this.echo(this.getTitle() + ' | sucessfully opened Criteria','INFO');
    }, function timeout() {
        this.capture('screen_logs/critOpenError.png');
        this.die(this.getTitle() + '| Opening  failed Criteria','ERROR');
    });
});


/* 
Indicates successfull users list
if finds the text : 
 > > > > > > > > > > > > > > > : Add candidate 
input : status
expected : Title + successfully opened
*/

page.thenOpen('http://localhost:8080/adm/candidates/list', function(){
	this.echo(this.getCurrentUrl()+' opened  ', 'PARAMETER');
	this.waitForText("Add candidate", function then() {
        this.echo(this.getTitle() + ' | sucessfully opened candidates','INFO');
    }, function timeout() {
        this.capture('screen_logs/candOpenError.png');
        this.die(this.getTitle() + '| Opening  failed candidates','ERROR');
    });
});


page.run(); //finish

